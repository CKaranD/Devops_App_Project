# name: Deploy to Staging ECR

# on:
#   push:
#     branches:
#       - staging-classifier # Keeps existing trigger on push to staging branch
#   repository_dispatch:
#     types: [deploy-staging]  # Define a custom event type for dispatch
    
# jobs:
#   build-and-push:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3

#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}

#       - name: Login to Amazon ECR
#         id: login-ecr
#         uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a

#       - name: Build, tag, and push image to Amazon ECR
#         env:
#           ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#           ECR_REPOSITORY: staging-zus-phase2-lambda-classifier
#           IMAGE_TAG: latest
#         run: |
#           docker build --build-arg OPENAI_API_KEY=$(cat OPENAI_API_KEY/OPENAI_API_KEY_MINDHIVE.txt) -t lambda_classifier .
#         # docker build -t lambda_classifier .
#           docker tag lambda_classifier:latest 339713113095.dkr.ecr.ap-southeast-1.amazonaws.com/staging-zus-phase2-lambda-classifier:latest
#           docker push 339713113095.dkr.ecr.ap-southeast-1.amazonaws.com/staging-zus-phase2-lambda-classifier:latest

#         # docker tag lambda_classifier:latest 180844954664.dkr.ecr.ap-southeast-1.amazonaws.com/staging-zus-phase2-lambda-classifier:latest
#         # docker push 180844954664.dkr.ecr.ap-southeast-1.amazonaws.com/staging-zus-phase2-lambda-classifier:latest

name: Deploy to Staging ECR

on:
  push:
    branches:
      - staging-classifier # Keeps existing trigger on push to staging branch
  repository_dispatch:
    types: [deploy-staging]  # Define a custom event type for dispatch
    
env:
  AWS_REGION: ap-southeast-1
  ECR_REPOSITORY: staging-zus-phase2-lambda-classifier

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: staging-zus-phase2-lambda-classifier
          IMAGE_TAG: latest
        run: |
          docker build --build-arg OPENAI_API_KEY=$(cat OPENAI_API_KEY/OPENAI_API_KEY_MINDHIVE.txt) -t lambda_classifier .
          docker tag lambda_classifier:latest ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
